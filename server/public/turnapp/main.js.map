{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-interceptor.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dialog-confirm/dialog-confirm.component.ts","./src/app/components/dialog-confirm/dialog-confirm.component.html","./src/app/components/dialog-edit-employee/dialog-edit-employee.component.ts","./src/app/components/dialog-edit-employee/dialog-edit-employee.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/const.ts","./src/app/directives/http-disabled.directive.ts","./src/app/guards/auth.guard.ts","./src/app/services/api.service.ts","./src/app/services/auth.service.ts","./src/app/services/global.service.ts","./src/app/services/message.service.ts","./src/app/views/employees-view/employee-list-view/employee-list-view.component.ts","./src/app/views/employees-view/employee-list-view/employee-list-view.component.html","./src/app/views/employees-view/employee-register-view/employee-register-view.component.ts","./src/app/views/employees-view/employee-register-view/employee-register-view.component.html","./src/app/views/employees-view/employees-view.component.ts","./src/app/views/employees-view/employees-view.component.html","./src/app/views/home-view/home-view.component.ts","./src/app/views/home-view/home-view.component.html","./src/app/views/login-view/login-view.component.ts","./src/app/views/login-view/login-view.component.html","./src/app/views/reset-password-view/reset-password-view.component.ts","./src/app/views/reset-password-view/reset-password-view.component.html","./src/app/views/settings-view/settings-categories-view/settings-categories-view.component.ts","./src/app/views/settings-view/settings-categories-view/settings-categories-view.component.html","./src/app/views/settings-view/settings-identification-types-view/settings-identification-types-view.component.ts","./src/app/views/settings-view/settings-identification-types-view/settings-identification-types-view.component.html","./src/app/views/settings-view/settings-shedules-view/settings-shedules-view.component.ts","./src/app/views/settings-view/settings-shedules-view/settings-shedules-view.component.html","./src/app/views/settings-view/settings-view.component.ts","./src/app/views/settings-view/settings-view.component.html","./src/app/views/shedule-view/shedule-view.component.ts","./src/app/views/shedule-view/shedule-view.component.html","./src/app/views/without-permissions-view/without-permissions-view.component.ts","./src/app/views/without-permissions-view/without-permissions-view.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpResponse,\r\n    HttpErrorResponse,\r\n} from \"@angular/common/http\";\r\nimport { AuthService } from './services/auth.service';\r\nimport { GlobalService } from './services/global.service';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from './services/message.service';\r\n\r\n\r\n@Injectable()\r\nexport class AppInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private globalService: GlobalService,\r\n        private router: Router,\r\n        private messageService: MessageService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        this.globalService.changeRunning(true);\r\n        const token = this.authService.getToken() || 'bearer';\r\n        const updatedRequest = request.clone({ headers: request.headers.set('Authorization', token) })\r\n        return next.handle(updatedRequest).pipe(\r\n            tap(\r\n                event => {\r\n                    if (event instanceof HttpResponse) {\r\n                        this.globalService.changeRunning(false);\r\n                    }\r\n                },\r\n                error => {\r\n                    if (error instanceof HttpErrorResponse) {\r\n                        this.globalService.changeRunning(false);\r\n                        const httpError: HttpErrorResponse = error;\r\n                        if (httpError.status == 403) {\r\n                            this.messageService.longMessage('Su sesión a expirado');\r\n                            setTimeout(() => {\r\n                                localStorage.clear();\r\n                                this.router.navigate(['']);\r\n                            }, 3000);\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n        );\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { EmployeeListViewComponent } from './views/employees-view/employee-list-view/employee-list-view.component';\r\nimport { EmployeeRegisterViewComponent } from './views/employees-view/employee-register-view/employee-register-view.component';\r\nimport { EmployeesViewComponent } from './views/employees-view/employees-view.component';\r\nimport { HomeViewComponent } from './views/home-view/home-view.component';\r\nimport { SettingsCategoriesViewComponent } from './views/settings-view/settings-categories-view/settings-categories-view.component';\r\nimport { SettingsIdentificationTypesViewComponent } from './views/settings-view/settings-identification-types-view/settings-identification-types-view.component';\r\nimport { SettingsShedulesViewComponent } from './views/settings-view/settings-shedules-view/settings-shedules-view.component';\r\nimport { SettingsViewComponent } from './views/settings-view/settings-view.component';\r\nimport { SheduleViewComponent } from './views/shedule-view/shedule-view.component';\r\nimport { LoginViewComponent } from './views/login-view/login-view.component';\r\nimport { ResetPasswordViewComponent } from './views/reset-password-view/reset-password-view.component';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'login'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginViewComponent\r\n  },\r\n  {\r\n    path: 'reset-password',\r\n    component: ResetPasswordViewComponent\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'home'\r\n      },\r\n      {\r\n        path: 'home',\r\n        component: HomeViewComponent\r\n      },\r\n      {\r\n        path: 'employees',\r\n        component: EmployeesViewComponent,\r\n        children: [\r\n          {\r\n            path: '',\r\n            pathMatch: 'full',\r\n            redirectTo: 'list'\r\n          },\r\n          {\r\n            path: 'register',\r\n            component: EmployeeRegisterViewComponent\r\n          },\r\n          {\r\n            path: 'list',\r\n            component: EmployeeListViewComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'shedules',\r\n        component: SheduleViewComponent\r\n      },\r\n      {\r\n        path: 'settings',\r\n        component: SettingsViewComponent,\r\n        children: [\r\n          {\r\n            path: '',\r\n            pathMatch: 'full',\r\n            redirectTo: 'shedules'\r\n          },\r\n          {\r\n            path: 'shedules',\r\n            component: SettingsShedulesViewComponent\r\n          },\r\n          {\r\n            path: 'categories',\r\n            component: SettingsCategoriesViewComponent\r\n          },\r\n          {\r\n            path: 'identification-types',\r\n            component: SettingsIdentificationTypesViewComponent\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'web';\r\n}\r\n","<router-outlet></router-outlet>","//Angular imports\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppInterceptor } from './app-interceptor';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//Flex layput import\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n//Material imports\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\n\r\n//Components imports\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { HomeViewComponent } from './views/home-view/home-view.component';\r\nimport { EmployeesViewComponent } from './views/employees-view/employees-view.component';\r\nimport { SheduleViewComponent } from './views/shedule-view/shedule-view.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { HttpDisabledDirective } from './directives/http-disabled.directive';\r\nimport { DialogConfirmComponent } from './components/dialog-confirm/dialog-confirm.component';\r\nimport { EmployeeRegisterViewComponent } from './views/employees-view/employee-register-view/employee-register-view.component';\r\nimport { EmployeeListViewComponent } from './views/employees-view/employee-list-view/employee-list-view.component';\r\nimport { DialogEditEmployeeComponent } from './components/dialog-edit-employee/dialog-edit-employee.component';\r\nimport { SettingsViewComponent } from './views/settings-view/settings-view.component';\r\nimport { SettingsShedulesViewComponent } from './views/settings-view/settings-shedules-view/settings-shedules-view.component';\r\nimport { SettingsCategoriesViewComponent } from './views/settings-view/settings-categories-view/settings-categories-view.component';\r\nimport { LoginViewComponent } from './views/login-view/login-view.component';\r\nimport { SettingsIdentificationTypesViewComponent } from './views/settings-view/settings-identification-types-view/settings-identification-types-view.component';\r\nimport { WithoutPermissionsViewComponent } from './views/without-permissions-view/without-permissions-view.component';\r\nimport { ResetPasswordViewComponent } from './views/reset-password-view/reset-password-view.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    HomeViewComponent,\r\n    EmployeesViewComponent,\r\n    SheduleViewComponent,\r\n    HttpDisabledDirective,\r\n    DialogConfirmComponent,\r\n    EmployeeRegisterViewComponent,\r\n    EmployeeListViewComponent,\r\n    DialogEditEmployeeComponent,\r\n    SettingsViewComponent,\r\n    SettingsShedulesViewComponent,\r\n    SettingsCategoriesViewComponent,\r\n    LoginViewComponent,\r\n    SettingsIdentificationTypesViewComponent,\r\n    WithoutPermissionsViewComponent,\r\n    ResetPasswordViewComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatSnackBarModule,\r\n    HttpClientModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    NgxMaterialTimepickerModule\r\n  ],\r\n  providers: [\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AppInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  entryComponents: [\r\n    DialogConfirmComponent,\r\n    DialogEditEmployeeComponent,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AfterViewChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { GlobalService } from 'src/app/services/global.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MessageService } from 'src/app/services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit, AfterViewChecked {\r\n\r\n  public isRunning: boolean = false;\r\n  public currentUser: any;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    private globalService: GlobalService,\r\n    private cdRef: ChangeDetectorRef,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n    private messageService: MessageService\r\n  ) { }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.globalService.getRunning().subscribe((value: boolean) => this.isRunning = value);\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDataCurrent();\r\n  }\r\n\r\n  getDataCurrent() {\r\n    this.apiService.getCurrent().subscribe(\r\n      (response: any) => {\r\n        this.currentUser = response.data;\r\n      },\r\n      (err: any) => {\r\n        const messageError = err.error.message || 'Ocurrió un error desconocido';\r\n        this.messageService.longMessage(messageError);\r\n      }\r\n    )\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container animated fadeIn\">\r\n  <mat-sidenav #drawer class=\"sidenav mat-elevation-z2\" fixedInViewport\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\" [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\">\r\n    <mat-toolbar fxLayoutAlign=\"center center\">\r\n      <img src=\"./assets/logo.jpeg\" alt=\"logo-app\" class=\"logo-app\">\r\n    </mat-toolbar>\r\n\r\n    <mat-nav-list>\r\n      <a mat-list-item routerLink=\"./employees\" routerLinkActive=\"router-link-active\">Empleados</a>\r\n      <a mat-list-item routerLink=\"./shedules\" routerLinkActive=\"router-link-active\">Turnos</a>\r\n      <a mat-list-item routerLink=\"./settings\" routerLinkActive=\"router-link-active\">Configuración</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <div>\r\n      <mat-toolbar class=\"mat-elevation-z2\">\r\n        <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\"\r\n          *ngIf=\"isHandset$ | async\">\r\n          <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n        </button>\r\n        <span>{{currentUser?.name}}</span>\r\n\r\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"end end\">\r\n          <button mat-icon-button matTooltip=\"Ayuda\">\r\n            <mat-icon>help_outlined</mat-icon>\r\n          </button>\r\n\r\n          <button mat-icon-button matTooltip=\"Cerrar sesión\" (click)=\"logout()\">\r\n            <mat-icon>power_settings_new</mat-icon>\r\n          </button>\r\n        </div>\r\n      </mat-toolbar>\r\n      <mat-progress-bar mode=\"query\" color=\"primary\" *ngIf=\"isRunning\"></mat-progress-bar>\r\n    </div>\r\n    <!-- Add Content Here -->\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog-confirm',\n  templateUrl: './dialog-confirm.component.html',\n  styleUrls: ['./dialog-confirm.component.scss']\n})\nexport class DialogConfirmComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<any>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ data.title }}</h2>\n<mat-dialog-content class=\"mat-typography\">\n    <p>{{ data.message }}</p>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button fxFlex mat-button [mat-dialog-close]=\"true\" color=\"primary\" cdkFocusInitial>Aceptar</button>\n    <button fxFlex mat-button [mat-dialog-close]=\"false\">Cancelar</button>\n</mat-dialog-actions>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { forkJoin } from 'rxjs';\nimport { CategoryModel } from 'src/app/models/CategoryModel';\nimport { EmployeeModel } from 'src/app/models/EmployeeModel';\nimport { ApiService } from 'src/app/services/api.service';\nimport { MessageService } from 'src/app/services/message.service';\n\n@Component({\n  selector: 'turnapp-dialog-edit-employee',\n  templateUrl: './dialog-edit-employee.component.html',\n  styleUrls: ['./dialog-edit-employee.component.scss']\n})\nexport class DialogEditEmployeeComponent implements OnInit {\n\n  public editEmployeeForm: FormGroup;\n  public employeeSelected: EmployeeModel;\n  public hasErrors: boolean;\n  public categoriesList: Array<CategoryModel> = [];\n  public identificationTypes: Array<any> = [];\n\n  constructor(\n    private messageService: MessageService,\n    private apiService: ApiService,\n    @Inject(MAT_DIALOG_DATA) public data: EmployeeModel,\n    public dialogRef: MatDialogRef<any>\n  ) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.getDataInit();\n    this.employeeSelected = this.data;\n    this.editEmployeeForm.patchValue(this.employeeSelected);\n    this.editEmployeeForm.get('category').setValue(this.employeeSelected.category._id);\n  }\n\n  buildForm() {\n    this.editEmployeeForm = new FormGroup({\n      identificationNumber: new FormControl({ value: '', disabled: true }, [Validators.required]),\n      identificationType: new FormControl({ value: '', disabled: true }, [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      seconName: new FormControl(''),\n      firstLastname: new FormControl('', [Validators.required]),\n      seconLastname: new FormControl(''),\n      email: new FormControl('', [Validators.required]),\n      category: new FormControl('', [Validators.required]),\n    });\n    this.hasErrors = false;\n  }\n\n  saveEmployee() {\n    if (this.editEmployeeForm.invalid) {\n      this.messageService.shortMessage('Los campos marcados en rojo deben ser verificacos');\n      this.hasErrors = true;\n      return;\n    }\n    const newEmployee: EmployeeModel = {\n      ...this.editEmployeeForm.value\n    }\n    newEmployee.code = this.employeeSelected.code;\n\n    this.apiService.editEmployee(newEmployee, this.employeeSelected.code).subscribe(\n      (response: any) => {\n        this.messageService.shortMessage(response.message);\n        this.employeeSelected = null;\n        this.buildForm();\n        this.dialogRef.close(true);\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  getDataInit() {\n    forkJoin([\n      this.apiService.getCategories(0, 1000),\n      this.apiService.getIdentificationTypes(0, 1000)\n    ]).subscribe(\n      (response: any) => {\n        this.categoriesList = response[0].items;\n        this.identificationTypes = response[1].items;\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n}\n","<form [formGroup]=\"editEmployeeForm\" (ngSubmit)=\"saveEmployee()\">\n    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n        <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n            [class.mat-form-field-invalid]=\"hasErrors && editEmployeeForm.get('identificationNumber')?.invalid\">\n            <mat-label>Número identificación</mat-label>\n            <input matInput formControlName=\"identificationNumber\" required>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n            [class.mat-form-field-invalid]=\"hasErrors && editEmployeeForm.get('identificationType')?.invalid\">\n            <mat-label>Tipo Identificación</mat-label>\n            <mat-select formControlName=\"identificationType\" required>\n                <mat-option *ngFor=\"let item of identificationTypes\" [value]=\"item._id\">\n                    {{ item.description}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n            [class.mat-form-field-invalid]=\"hasErrors && editEmployeeForm.get('firstName')?.invalid\">\n            <mat-label>Primer nombre</mat-label>\n            <input matInput formControlName=\"firstName\" required>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex=\"25\">\n            <mat-label>Segundo nombre</mat-label>\n            <input matInput formControlName=\"seconName\">\n        </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n        <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n            [class.mat-form-field-invalid]=\"hasErrors && editEmployeeForm.get('firstLastname')?.invalid\">\n            <mat-label>Primer apellido</mat-label>\n            <input matInput formControlName=\"firstLastname\" required>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex=\"25\">\n            <mat-label>Segundo apellido</mat-label>\n            <input matInput formControlName=\"seconLastname\">\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n            [class.mat-form-field-invalid]=\"hasErrors && editEmployeeForm.get('email')?.invalid\">\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" required>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n            [class.mat-form-field-invalid]=\"hasErrors && editEmployeeForm.get('category')?.invalid\">\n            <mat-label>Categoría</mat-label>\n            <mat-select formControlName=\"category\" required>\n                <mat-option *ngFor=\"let item of categoriesList\" [value]=\"item._id\">\n                    {{ item.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"end end\">\n        <button appHttpDisabled mat-raised-button color=\"primary\" type=\"submit\">\n            Aceptar\n        </button>\n\n        <button appHttpDisabled mat-raised-button type=\"button\" [mat-dialog-close]=\"false\">\n            Cerrar\n        </button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { MessageService } from 'src/app/services/message.service';\n\n@Component({\n  selector: 'turnapp-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public loginForm: FormGroup;\n  public currentYear: Date = new Date();\n  public isRunning: boolean;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private messageService: MessageService,\n    private globalService: GlobalService\n  ) { }\n\n  ngOnInit(): void {\n    this.globalService.getRunning().subscribe(value => this.isRunning = value);\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    })\n  }\n\n  login() {\n    if (this.loginForm.invalid) {\n      this.messageService.shortMessage('Debe ingresar credenciales válidas');\n      return;\n    }\n    this.authService.login(this.loginForm.value).subscribe(\n      (response: any) => {\n        this.authService.setToken(response.token);\n        this.router.navigate(['/dashboard']);\n      },\n      (err: any) => {\n        const messageError = err.error.message || 'Ocurrió un error desconocido';\n        this.messageService.longMessage(messageError);\n      }\n    )\n  }\n}\n","<mat-card class=\"mat-elevation-z0\">\n    <div fxLayoutAlign=\"center\">\n        <img src=\"./assets/logo.jpeg\" alt=\"logo-app\" class=\"logo-app\">\n    </div>\n    <br>\n    <br>\n    <br>\n\n    <mat-card-title fxLayoutAlign=\"center center\">\n        <span class=\"text-title-login\">Bienvenidos a TurnApp</span>\n    </mat-card-title>\n    <br>\n\n    <mat-card-content fxLayout=\"column\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n            <div fxLayout=\"column\" fxLayoutGap=\"25px\">\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>Contraseña</mat-label>\n                    <input matInput formControlName=\"password\" required type=\"password\">\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"column\">\n                <button [disabled]=\"isRunning\" mat-raised-button color=\"primary\" type=\"submit\">\n                    Buscar\n                </button>\n            </div>\n        </form>\n        <br>\n\n        <div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\n            <a routerLink=\"/reset-password\" class=\"link\">\n                ¿Olvidó su contraseña?\n            </a>\n\n            <span>\n                ¿No tiene cuenta? regístrate\n                <a routerLink=\"/\" class=\"link\">\n                    aquí.\n                </a>\n            </span>\n\n            <span class=\"text-ghost\">Copyright {{ currentYear| date: 'yyyy'}} © Galvis Dev</span>\n        </div>\n    </mat-card-content>\n</mat-card>","export const consts = {\r\n    pageSizeOptions: [5, 10, 15],\r\n    pageIndex: 0,\r\n    pageSize: 5,\r\n    emailRegex: new RegExp(`\\\\w+([-+.']\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*`),\r\n    lettersRegex: new RegExp(`[a-zA-Z ]{3,254}`),\r\n    numbersRegex: new RegExp(`\\\\d+`),\r\n}","import { Directive, ElementRef } from '@angular/core';\nimport { GlobalService } from '../services/global.service';\n\n@Directive({\n  selector: '[appHttpDisabled]'\n})\nexport class HttpDisabledDirective {\n\n  constructor(\n    private element: ElementRef<HTMLButtonElement>,\n    private globalService: GlobalService\n  ) {\n    this.globalService.getRunning().subscribe(\n      (value: boolean) => {\n        this.element.nativeElement.disabled = value;\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { MessageService } from '../services/message.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private messageService: MessageService\r\n  ) { }\r\n\r\n  canActivate() {\r\n    if (this.authService.hasTokenSession()) {\r\n      const token = this.authService.getToken();\r\n      if (this.authService.isExpiredToken(token)) {\r\n        this.messageService.longMessage('Su sesión a expirado');\r\n        setTimeout(() => {\r\n          localStorage.clear();\r\n          this.router.navigate(['']);\r\n          return false;\r\n        }, 3000);\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      localStorage.clear();\r\n      this.router.navigate(['']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { ApiResponse } from '../models/ApiResponse';\r\nimport { CategoryModel } from '../models/CategoryModel';\r\nimport { EmployeeModel } from '../models/EmployeeModel';\r\nimport { IdentificationTypeModel } from '../models/IdentificationTypeModel';\r\nimport { TurnModel } from '../models/TurnModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  private API: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.API = environment.API;\r\n  }\r\n\r\n  getCurrent() {\r\n    const endpoint: string = `/auth/tenant/current`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getEmployees(pageIndex: number, pageSize: number): Observable<ApiResponse<EmployeeModel>> {\r\n    const endpoint: string = `/employees/get?skip=${pageIndex}&limit=${pageSize}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<EmployeeModel>>(url);\r\n  }\r\n\r\n  getEmployeesFilter(filter: any, pageIndex: number, pageSize: number): Observable<ApiResponse<EmployeeModel>> {\r\n    const endpoint: string = `/employees/filters/get?skip=${pageIndex}&limit=${pageSize}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.post<ApiResponse<EmployeeModel>>(url, filter);\r\n  }\r\n\r\n  saveEmployee(data: EmployeeModel): Observable<any> {\r\n    const endpoint: string = `/employees/new`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.post<ApiResponse<EmployeeModel>>(url, data);\r\n  }\r\n\r\n  editEmployee(data: EmployeeModel, code: string): Observable<any> {\r\n    const endpoint: string = `/employees/put/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.put<ApiResponse<EmployeeModel>>(url, data);\r\n  }\r\n\r\n  deleteEmployee(code: string): Observable<any> {\r\n    const endpoint: string = `/employees/delete/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.delete<ApiResponse<EmployeeModel>>(url);\r\n  }\r\n\r\n  getOneEmployee(code: string): Observable<any> {\r\n    const endpoint: string = `/employees/get/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<EmployeeModel>>(url);\r\n  }\r\n\r\n  saveTurn(turn: any): Observable<any> {\r\n    const endpoint: string = `/turns/new`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.post<ApiResponse<any>>(url, turn);\r\n  }\r\n\r\n  getTurns(pageIndex: number, pageSize: number): Observable<any> {\r\n    const endpoint: string = `/turns/get?skip=${pageIndex}&limit=${pageSize}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<any>>(url);\r\n  }\r\n\r\n  deleteTurn(code: string): Observable<any> {\r\n    const endpoint: string = `/turns/delete/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.delete<ApiResponse<TurnModel>>(url);\r\n  }\r\n\r\n  editTurn(data: TurnModel, code: string): Observable<any> {\r\n    const endpoint: string = `/turns/put/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.put<ApiResponse<TurnModel>>(url, data);\r\n  }\r\n\r\n  saveCategory(turn: any): Observable<any> {\r\n    const endpoint: string = `/categories/new`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.post<ApiResponse<any>>(url, turn);\r\n  }\r\n\r\n  getCategories(pageIndex: number, pageSize: number): Observable<any> {\r\n    const endpoint: string = `/categories/get?skip=${pageIndex}&limit=${pageSize}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<any>>(url);\r\n  }\r\n\r\n  deleteCategory(code: string): Observable<any> {\r\n    const endpoint: string = `/categories/delete/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<CategoryModel>>(url);\r\n  }\r\n\r\n  editCategory(data: CategoryModel, code: string): Observable<any> {\r\n    const endpoint: string = `/categories/put/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.put<ApiResponse<CategoryModel>>(url, data);\r\n  }\r\n\r\n  getIdentificationTypes(pageIndex: number, pageSize: number) {\r\n    const endpoint: string = `/identification-types/get?skip=${pageIndex}&limit=${pageSize}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<any>>(url);\r\n  }\r\n\r\n  deleteIdentification(code: string): Observable<any> {\r\n    const endpoint: string = `/identification-types/delete/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<CategoryModel>>(url);\r\n  }\r\n\r\n  editIdentification(data: IdentificationTypeModel, code: string): Observable<any> {\r\n    const endpoint: string = `/identification-types/put/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.put<ApiResponse<CategoryModel>>(url, data);\r\n  }\r\n\r\n  saveIdentification(turn: any): Observable<any> {\r\n    const endpoint: string = `/identification-types/new`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.post<ApiResponse<any>>(url, turn);\r\n  }\r\n\r\n  getShedules(pageIndex: number, pageSize: number) {\r\n    const endpoint: string = `/shedules/get?skip=${pageIndex}&limit=${pageSize}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<any>>(url);\r\n  }\r\n\r\n  deleteShedule(code: string): Observable<any> {\r\n    const endpoint: string = `/shedules/delete/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.get<ApiResponse<CategoryModel>>(url);\r\n  }\r\n\r\n  editShedule(data: IdentificationTypeModel, code: string): Observable<any> {\r\n    const endpoint: string = `/shedules/put/${code}`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.put<ApiResponse<CategoryModel>>(url, data);\r\n  }\r\n\r\n  saveShedule(turn: any): Observable<any> {\r\n    const endpoint: string = `/shedules/new`;\r\n    const url: string = `${this.API}${endpoint}`;\r\n    return this.http.post<ApiResponse<any>>(url, turn);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserModel } from '../models/UserModel';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { TokenModel } from '../models/TokenModel';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    private nameToken: string = 'token';\r\n    private nameCurrent: string = 'current';\r\n    private API: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.API = environment.API;\r\n    }\r\n\r\n    login(data: any) {\r\n        const endpoint: string = `/auth/tenant/login`;\r\n        const url: string = `${this.API}${endpoint}`;\r\n        return this.http.post(url, data);\r\n    }\r\n\r\n    hasTokenSession() {\r\n        if (localStorage.getItem('token')) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken(): string {\r\n        return localStorage.getItem(this.nameToken);\r\n    }\r\n\r\n    setToken(token: string): void {\r\n        localStorage.setItem(this.nameToken, token);\r\n    }\r\n\r\n    setCurrentUser(user: Array<UserModel>): void {\r\n        localStorage.setItem(this.nameCurrent, JSON.stringify(user));\r\n    }\r\n\r\n    getExpDateToken(token: string): Date {\r\n        const decoded = jwt_decode(token) as TokenModel;\r\n        if (decoded.exp === undefined) return null;\r\n        const date = new Date(0);\r\n        date.setUTCSeconds(decoded.exp);\r\n        return date;\r\n    }\r\n\r\n    isExpiredToken(token?: string): boolean {\r\n        if (!token) token = this.getToken();\r\n        if (!token) return true;\r\n        const date = this.getExpDateToken(token);\r\n        if (date === undefined) return false;\r\n        return !(date.valueOf() > new Date().valueOf());\r\n    }\r\n\r\n    getPermissionUser(token?: string): string {\r\n        if (!token) token = this.getToken();\r\n        const decoded = jwt_decode(token) as TokenModel;\r\n        return decoded.role;\r\n    }\r\n\r\n    getCurrentUser(token?: string) {\r\n        if (!token) token = this.getToken();\r\n        const decoded = jwt_decode(token) as TokenModel;\r\n        return decoded.email;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalService {\r\n\r\n  public isRunning: Subject<boolean>;\r\n  public nameApp: string = 'turnapp';\r\n\r\n  constructor() {\r\n    this.isRunning = new Subject<boolean>();\r\n  }\r\n\r\n  changeRunning(value: boolean) {\r\n    this.isRunning.next(value);\r\n  }\r\n\r\n  getRunning(): Observable<any> {\r\n    return this.isRunning.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n\tMatSnackBar,\r\n\tMatSnackBarVerticalPosition,\r\n\tMatSnackBarHorizontalPosition\r\n} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n\tconstructor(\r\n\t\tprivate snackBar: MatSnackBar\r\n\t) { }\r\n\r\n\tshortMessage(\r\n\t\tmessage: string,\r\n\t\taction?: string,\r\n\t\tduration?: number,\r\n\t\tverticalPosition?: MatSnackBarVerticalPosition,\r\n\t\thorizontalPosition?: MatSnackBarHorizontalPosition) {\r\n\t\tthis.snackBar.open(message, action || 'Aceptar', {\r\n\t\t\tduration: duration || 3000,\r\n\t\t\tverticalPosition: verticalPosition || 'top',\r\n\t\t\thorizontalPosition: horizontalPosition || 'center',\r\n\t\t});\r\n\t}\r\n\r\n\tlongMessage(\r\n\t\tmessage: string,\r\n\t\taction?: string,\r\n\t\tduration?: number,\r\n\t\tverticalPosition?: MatSnackBarVerticalPosition,\r\n\t\thorizontalPosition?: MatSnackBarHorizontalPosition) {\r\n\t\tthis.snackBar.open(message, action || 'Aceptar', {\r\n\t\t\tduration: duration || 6000,\r\n\t\t\tverticalPosition: verticalPosition || 'top',\r\n\t\t\thorizontalPosition: horizontalPosition || 'center',\r\n\t\t});\r\n\t}\r\n\r\n\tcustomMessage(\r\n\t\tmessage: string,\r\n\t\taction: string,\r\n\t\tduration: number,\r\n\t\tverticalPosition: MatSnackBarVerticalPosition,\r\n\t\thorizontalPosition: MatSnackBarHorizontalPosition) {\r\n\t\tthis.snackBar.open(message, action, {\r\n\t\t\tduration,\r\n\t\t\tverticalPosition,\r\n\t\t\thorizontalPosition\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DialogConfirmComponent } from 'src/app/components/dialog-confirm/dialog-confirm.component';\r\nimport { ApiErrorModel } from 'src/app/models/ApiErrorModel';\r\nimport { ApiResponse } from 'src/app/models/ApiResponse';\r\nimport { EmployeeModel } from 'src/app/models/EmployeeModel';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { DialogEditEmployeeComponent } from 'src/app/components/dialog-edit-employee/dialog-edit-employee.component';\r\nimport { CategoryModel } from 'src/app/models/CategoryModel';\r\nimport { consts } from 'src/app/const';\r\nimport { GlobalService } from 'src/app/services/global.service';\r\n\r\n@Component({\r\n  selector: 'turnapp-employee-list-view',\r\n  templateUrl: './employee-list-view.component.html',\r\n  styleUrls: ['./employee-list-view.component.scss']\r\n})\r\nexport class EmployeeListViewComponent implements OnInit {\r\n\r\n  public searchEmployeeFrom: FormGroup;\r\n  public pageIndex: number = consts.pageIndex;\r\n  public pageSize: number = consts.pageSize;\r\n  public pageSizeOptions: Array<number> = consts.pageSizeOptions;\r\n  public displayedColumns: string[] = ['code', 'name', 'lastname', 'email', 'category', 'actions'];\r\n  public dataSource = new MatTableDataSource<EmployeeModel>([]);\r\n  public length: number = 0;\r\n  public categoriesList: Array<CategoryModel> = [];\r\n  public isRunning: boolean;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog,\r\n    private globalService: GlobalService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.globalService.getRunning().subscribe(value => this.isRunning = value);\r\n    this.buildFormSearch();\r\n    this.getCategories();\r\n  }\r\n\r\n  buildFormSearch() {\r\n    this.searchEmployeeFrom = new FormGroup({\r\n      code: new FormControl(''),\r\n      firstName: new FormControl(''),\r\n      firstLastname: new FormControl(''),\r\n      category: new FormControl([]),\r\n    })\r\n    this.pageIndex = consts.pageIndex;\r\n    this.pageSize = consts.pageSize;\r\n    this.pageSizeOptions = consts.pageSizeOptions;\r\n    this.length = 0;\r\n  }\r\n\r\n  getEmployees(event?: any) {\r\n    const pageIndex = event ? event.pageIndex * this.pageSize : this.pageIndex;\r\n    const pageSize = event ? event.pageSize : this.pageSize;\r\n    const filter = this.searchEmployeeFrom.value;\r\n    let categoriesSelected: Array<string> = this.searchEmployeeFrom.get('category').value || [];\r\n    if (categoriesSelected.length == 0) {\r\n      categoriesSelected = this.categoriesList.map(item => item._id);\r\n    }\r\n    filter.category = categoriesSelected;\r\n    this.apiService.getEmployeesFilter(filter, pageIndex, pageSize).subscribe(\r\n      (response: ApiResponse<EmployeeModel>) => {\r\n        this.dataSource = new MatTableDataSource<EmployeeModel>(response.items);\r\n        this.length = response.totalItems;\r\n      }\r\n    )\r\n  }\r\n\r\n  // getEmployees(event?: any) {\r\n  //   this.pageIndex = event ? event.pageIndex * this.pageSize : this.pageIndex;\r\n  //   this.pageSize = event ? event.pageSize : this.pageSize;\r\n  //   this.apiService.getEmployees(this.pageIndex, this.pageSize).subscribe(\r\n  //     (response: ApiResponse<EmployeeModel>) => {\r\n  //       this.dataSource = new MatTableDataSource<EmployeeModel>(response.items);\r\n  //       this.length = response.totalItems;\r\n  //     },\r\n  //     (error: ApiErrorModel) => {\r\n  //       this.messageService.shortMessage(error.error.message);\r\n  //     }\r\n  //   )\r\n  // }\r\n\r\n  getItemToEdit(element: EmployeeModel,) {\r\n    const dialogRef = this.dialog.open(DialogEditEmployeeComponent, {\r\n      data: element\r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe(\r\n      (value: boolean) => {\r\n        if (value) this.getEmployees();\r\n      }\r\n    )\r\n  }\r\n\r\n  goToDelete(element: EmployeeModel) {\r\n    const dialogRef = this.dialog.open(DialogConfirmComponent, {\r\n      width: '250px',\r\n      data: {\r\n        title: 'Confirmación',\r\n        message: '¿Está seguro de querer eliminar a este empleado?'\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(\r\n      (result) => {\r\n        if (result) {\r\n          this.apiService.deleteEmployee(element.code).subscribe(\r\n            (response: ApiResponse<EmployeeModel>) => {\r\n              this.messageService.shortMessage(response.message);\r\n              this.getEmployees();\r\n            },\r\n            (error: ApiErrorModel) => {\r\n              this.messageService.shortMessage(error.error.message);\r\n            }\r\n          )\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getCategories() {\r\n    this.apiService.getCategories(0, 1000).subscribe(\r\n      (response: ApiResponse<any>) => {\r\n        this.categoriesList = response.items;\r\n        this.getEmployees();\r\n      },\r\n      (error: any) => {\r\n        this.messageService.shortMessage(error.error.message);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutGap=\"15px\" class=\"animated fadeIn\">\n    <mat-card class=\"mat-elevation-z4\">\n        <mat-card-title>\n            Consulta de empleados\n        </mat-card-title>\n        <br>\n\n        <mat-card-content>\n            <form [formGroup]=\"searchEmployeeFrom\" (ngSubmit)=\"getEmployees()\">\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n                    <mat-form-field appearance=\"fill\" fxFlex=\"25\">\n                        <mat-label>Código</mat-label>\n                        <input matInput formControlName=\"code\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"25\">\n                        <mat-label>Primer nombre</mat-label>\n                        <input matInput formControlName=\"firstName\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"25\">\n                        <mat-label>Primer apellido</mat-label>\n                        <input matInput formControlName=\"firstLastname\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"25\">\n                        <mat-label>Categoría</mat-label>\n                        <mat-select formControlName=\"category\" multiple>\n                            <mat-option *ngFor=\"let item of categoriesList\" [value]=\"item._id\">\n                                {{ item.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"end end\">\n                    <button [disabled]=\"isRunning\" mat-raised-button color=\"primary\" type=\"submit\">\n                        Buscar\n                    </button>\n\n                    <button [disabled]=\"isRunning\" mat-raised-button type=\"button\" (click)=\"buildFormSearch()\">\n                        Limpiar\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"mat-elevation-z4\" fxLayout=\"column\">\n        <table mat-table [dataSource]=\"dataSource\">\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"code\">\n                <th mat-header-cell *matHeaderCellDef> Código </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"link-primary\">\n                        {{element.code}}\n                    </span>\n                </td>\n            </ng-container>\n\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef> Nombre </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.firstName }} </td>\n            </ng-container>\n\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"lastname\">\n                <th mat-header-cell *matHeaderCellDef> Apellido </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.firstLastname}} </td>\n            </ng-container>\n\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"email\">\n                <th mat-header-cell *matHeaderCellDef> Email </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"category\">\n                <th mat-header-cell *matHeaderCellDef> Categoría </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.category.name}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef> Acciones </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"warn\" type=\"button\" matTooltip=\"Eliminar\"\n                            (click)=\"goToDelete(element)\">\n                            <mat-icon>delete_for_ever</mat-icon>\n                        </button>\n\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"primary\" type=\"button\" matTooltip=\"Editar\"\n                            (click)=\"getItemToEdit(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n            </tr>\n        </table>\n\n        <div fxLayoutAlign=\"center end\" *ngIf=\"length == 0\">\n            <h4 class=\"no-data\">No hay registros para mostrar.</h4>\n        </div>\n\n        <mat-paginator *ngIf=\"length != 0\" [length]=\"length\" [pageSizeOptions]=\"pageSizeOptions\"\n            (page)=\"getEmployees($event)\">\n        </mat-paginator>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\nimport { CategoryModel } from 'src/app/models/CategoryModel';\nimport { EmployeeModel } from 'src/app/models/EmployeeModel';\nimport { ApiService } from 'src/app/services/api.service';\nimport { MessageService } from 'src/app/services/message.service';\nimport { consts } from 'src/app/const';\nimport { GlobalService } from 'src/app/services/global.service';\n\n@Component({\n  selector: 'turnapp-employee-register-view',\n  templateUrl: './employee-register-view.component.html',\n  styleUrls: ['./employee-register-view.component.scss']\n})\nexport class EmployeeRegisterViewComponent implements OnInit {\n\n  public registerEmployeeForm: FormGroup;\n  public categoriesList: Array<CategoryModel> = [];\n  public identificationTypes: Array<any> = [];\n  public hasErrors: boolean;\n  public isRunning: boolean;\n\n  constructor(\n    private messageService: MessageService,\n    private apiService: ApiService,\n    private globalService: GlobalService\n  ) { }\n\n  ngOnInit(): void {\n    this.globalService.getRunning().subscribe(value => this.isRunning = value);\n    this.buildFormRegister();\n    this.getDataInit();\n  }\n\n  buildFormRegister() {\n    this.registerEmployeeForm = new FormGroup({\n      identificationNumber: new FormControl('', [Validators.required, Validators.pattern(consts.numbersRegex)]),\n      identificationType: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required, Validators.pattern(consts.lettersRegex)]),\n      seconName: new FormControl('', [Validators.pattern(consts.lettersRegex)]),\n      firstLastname: new FormControl('', [Validators.required, Validators.pattern(consts.lettersRegex)]),\n      seconLastname: new FormControl('', [Validators.pattern(consts.lettersRegex)]),\n      email: new FormControl('', [Validators.required, Validators.pattern(consts.emailRegex)]),\n      category: new FormControl('', [Validators.required]),\n    });\n    this.hasErrors = false;\n  }\n\n  saveEmployee() {\n    if (this.registerEmployeeForm.invalid) {\n      this.messageService.shortMessage('Los campos marcados en rojo deben ser verificacos');\n      this.hasErrors = true;\n      return;\n    }\n    const newEmployee: EmployeeModel = {\n      ...this.registerEmployeeForm.value\n    }\n    this.registerEmployeeForm.disable();\n    this.apiService.saveEmployee(newEmployee).subscribe(\n      (response: any) => {\n        this.registerEmployeeForm.enable();\n        this.messageService.shortMessage(response.message);\n        this.buildFormRegister();\n      },\n      (error: any) => {\n        this.registerEmployeeForm.enable();\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  getDataInit() {\n    forkJoin([\n      this.apiService.getCategories(0, 1000),\n      this.apiService.getIdentificationTypes(0, 1000)\n    ]).subscribe(\n      (response: any) => {\n        this.categoriesList = response[0].items;\n        this.identificationTypes = response[1].items;\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 animated fadeIn\">\n    <mat-card-title>\n        Registro de empleados\n    </mat-card-title>\n    <br>\n\n    <mat-card-content>\n        <form [formGroup]=\"registerEmployeeForm\" (ngSubmit)=\"saveEmployee()\">\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n                <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                    [class.mat-form-field-invalid]=\"hasErrors && registerEmployeeForm.get('identificationNumber')?.invalid\">\n                    <mat-label>Número identificación</mat-label>\n                    <input matInput formControlName=\"identificationNumber\" required>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                    [class.mat-form-field-invalid]=\"hasErrors && registerEmployeeForm.get('identificationType')?.invalid\">\n                    <mat-label>Tipo Identificación</mat-label>\n                    <mat-select formControlName=\"identificationType\" required>\n                        <mat-option *ngFor=\"let item of identificationTypes\" [value]=\"item._id\">\n                            {{ item.description}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                    [class.mat-form-field-invalid]=\"hasErrors && registerEmployeeForm.get('firstName')?.invalid\">\n                    <mat-label>Primer nombre</mat-label>\n                    <input matInput formControlName=\"firstName\" required>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" fxFlex=\"25\">\n                    <mat-label>Segundo nombre</mat-label>\n                    <input matInput formControlName=\"seconName\">\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n                <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                    [class.mat-form-field-invalid]=\"hasErrors && registerEmployeeForm.get('firstLastname')?.invalid\">\n                    <mat-label>Primer apellido</mat-label>\n                    <input matInput formControlName=\"firstLastname\" required>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" fxFlex=\"25\">\n                    <mat-label>Segundo apellido</mat-label>\n                    <input matInput formControlName=\"seconLastname\">\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                    [class.mat-form-field-invalid]=\"hasErrors && registerEmployeeForm.get('email')?.invalid\">\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                    [class.mat-form-field-invalid]=\"hasErrors && registerEmployeeForm.get('category')?.invalid\">\n                    <mat-label>Categoría</mat-label>\n                    <mat-select formControlName=\"category\" required>\n                        <mat-option *ngFor=\"let item of categoriesList\" [value]=\"item._id\">\n                            {{ item.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"end end\">\n                <button [disabled]=\"isRunning\" mat-raised-button color=\"primary\" type=\"submit\">\n                    Aceptar\n                </button>\n\n                <button [disabled]=\"isRunning\" mat-raised-button type=\"button\" (click)=\"buildFormRegister()\">\n                    Limpiar\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LinkNavigation } from 'src/app/models/LinkNavigation';\n\n@Component({\n  selector: 'app-employees-view',\n  templateUrl: './employees-view.component.html',\n  styleUrls: ['./employees-view.component.scss']\n})\nexport class EmployeesViewComponent implements OnInit {\n\n  public navLinks: Array<LinkNavigation>;\n  public activeLinkIndex = -1;\n\n  constructor(private router: Router) {\n    this.navLinks = [\n      {\n        label: 'Consulta',\n        link: './list',\n        index: 0,\n        icon: 'search'\n      },\n      {\n        label: 'Registro',\n        link: './register',\n        index: 1,\n        icon: 'edit'\n      },\n    ];\n  }\n\n  ngOnInit(): void {\n    this.router.events.subscribe(\n      (res) => {\n        this.activeLinkIndex = this.navLinks.indexOf(this.navLinks.find(tab => tab.link === '.' + this.router.url));\n      }\n    );\n  }\n\n}\n","<nav mat-tab-nav-bar class=\"animated fadeIn fast\">\n    <a mat-tab-link *ngFor=\"let link of navLinks\" [routerLink]=\"link.link\" routerLinkActive #rla=\"routerLinkActive\"\n        [active]=\"rla.isActive\">\n        <mat-icon>{{link.icon}}</mat-icon>\n        {{link.label}}\n    </a>\n</nav>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-view',\r\n  templateUrl: './home-view.component.html',\r\n  styleUrls: ['./home-view.component.scss']\r\n})\r\nexport class HomeViewComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  navigateTo(route: string) {\r\n    this.router.navigate([route]);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <mat-card class=\"mat-elevation-z4\">\r\n        <mat-card-title>\r\n            Bienvenidos a TurnApp\r\n        </mat-card-title>\r\n        <br>\r\n\r\n        <mat-card-subtitle>\r\n            Registre a sus empleados, gestione sus horarios y mantenga organizado y seguro el tiempo y l ainformación de\r\n            su empresa.\r\n        </mat-card-subtitle>\r\n\r\n        <mat-card-content>\r\n            <div fxLayout=\"row\" fxLayoutGap=\"20px\">\r\n                <button mat-raised-button color=\"primary\" (click)=\"navigateTo('/dashboard/employees/list')\">\r\n                    Gestionar empleados\r\n                </button>\r\n                <button mat-raised-button color=\"primary\" (click)=\"navigateTo('/dashboard/shedules')\">\r\n                    Gestionar turnos\r\n                </button>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { GlobalService } from 'src/app/services/global.service';\n\n@Component({\n  selector: 'turnapp-login-view',\n  templateUrl: './login-view.component.html',\n  styleUrls: ['./login-view.component.scss']\n})\nexport class LoginViewComponent implements OnInit {\n\n  loginForm: FormGroup;\n  public isRunning: boolean = false;\n\n  constructor(\n    private iconRegistry: MatIconRegistry,\n    private sanitizer: DomSanitizer,\n    private globalService: GlobalService\n  ) {\n    this.iconRegistry.addSvgIcon('img_1', this.sanitizer.bypassSecurityTrustResourceUrl('./assets/login/undraw_Spreadsheet_re_cn18.svg'));\n  }\n\n  ngOnInit(): void {\n    this.globalService.getRunning().subscribe((value: boolean) => this.isRunning = value);\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.loginForm = new FormGroup({\n      user: new FormControl('', [Validators.required]),\n      pass: new FormControl('', [Validators.required])\n    })\n  }\n\n}\n","<mat-progress-bar mode=\"query\" color=\"primary\" *ngIf=\"isRunning\"></mat-progress-bar>\n<div fxLayout=\"row\" class=\"container-master-login animated fadeIn\">\n    <div fxFlex=\"30\" class=\"container-login-form\" fxLayoutAlign=\"start center\">\n        <turnapp-login fxFlex></turnapp-login>\n    </div>\n\n    <div fxFlex=\"70\" class=\"container-login\" fxLayout=\"column\">\n\n        <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"15px\">\n            <img src=\"./assets/login/undraw_Spreadsheet_re_cn18.svg\" alt=\"svg-business\" class=\"img_login\">\n            <h1 class=\"text-login\">La mejor forma de organizar y gestionar el tiempo de tu empresa</h1>\n        </div>\n\n        <div fxLayoutAlign=\"space-between center\">\n            <span class=\"text-span-login\">\n                Estamos comprometidos con brindarte la mejor experiencia para la gestion laboral de empresa.\n                Agradecemos tu confianza, con nosotros tu información y la de tus empleados siempre estará segura.\n            </span>\n            <img src=\"./assets/login/undraw_Confirmation_re_b6q5.svg\" alt=\"svg-business\" class=\"img_login\">\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'turnapp-reset-password-view',\n  templateUrl: './reset-password-view.component.html',\n  styleUrls: ['./reset-password-view.component.scss']\n})\nexport class ResetPasswordViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reset-password-view works!</p>\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DialogConfirmComponent } from 'src/app/components/dialog-confirm/dialog-confirm.component';\nimport { ApiErrorModel } from 'src/app/models/ApiErrorModel';\nimport { ApiResponse } from 'src/app/models/ApiResponse';\nimport { ApiService } from 'src/app/services/api.service';\nimport { MessageService } from 'src/app/services/message.service';\nimport { CategoryModel } from 'src/app/models/CategoryModel';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { consts } from 'src/app/const';\n\n@Component({\n  selector: 'turnapp-settings-categories-view',\n  templateUrl: './settings-categories-view.component.html',\n  styleUrls: ['./settings-categories-view.component.scss']\n})\nexport class SettingsCategoriesViewComponent implements OnInit {\n\n  public categoryForm: FormGroup;\n  public categorySelected: CategoryModel;\n  public pageIndex: number = consts.pageIndex;\n  public pageSize: number = consts.pageSize;\n  public pageSizeOptions: Array<number> = consts.pageSizeOptions;\n  public displayedColumns: string[] = ['id', 'name', 'description', 'actions'];\n  public dataSource = new MatTableDataSource<any>([]);\n  public length: number = 0;\n  public selection = new SelectionModel<any>(true, []);\n  public hasErrors: boolean;\n  public isRunning: boolean;\n\n  constructor(\n    private messageService: MessageService,\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private globalService: GlobalService\n  ) { }\n\n  ngOnInit(): void {\n    this.globalService.getRunning().subscribe(value => this.isRunning = value);\n    this.buildForm();\n    this.getCategories();\n  }\n\n  buildForm() {\n    this.categoryForm = null;\n    this.categoryForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n    });\n    this.categorySelected = null;\n    this.hasErrors = false;\n    this.pageIndex = consts.pageIndex;\n    this.pageSize = consts.pageSize;\n    this.pageSizeOptions = consts.pageSizeOptions;\n    this.length = 0;\n  }\n\n  saveCategory() {\n    if (this.categoryForm.invalid) {\n      this.messageService.shortMessage('Los campos marcados en rojo deben ser verificados');\n      this.hasErrors = true;\n      return;\n    }\n\n    if (this.categorySelected) {\n      this.apiService.editCategory(this.categoryForm.value, this.categorySelected._id).subscribe(\n        (response: ApiResponse<any>) => {\n          this.messageService.shortMessage(response.message);\n          this.buildForm();\n          this.getCategories();\n        },\n        (error: any) => {\n          this.messageService.shortMessage(error.error.message);\n        }\n      )\n      return;\n    }\n\n    this.apiService.saveCategory(this.categoryForm.value).subscribe(\n      (response: ApiResponse<any>) => {\n        this.messageService.shortMessage(response.message);\n        this.buildForm();\n        this.getCategories();\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  getCategories(event?: any) {\n    const pageIndex = event ? event.pageIndex * this.pageSize : this.pageIndex;\n    const pageSize = event ? event.pageSize : this.pageSize;\n    this.apiService.getCategories(pageIndex, pageSize).subscribe(\n      (response: ApiResponse<any>) => {\n        this.dataSource = new MatTableDataSource<any>(response.items);\n        this.length = response.totalItems;\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  goToDelete(element: CategoryModel) {\n    const dialogRef = this.dialog.open(DialogConfirmComponent, {\n      width: '250px',\n      data: {\n        title: 'Confirmación',\n        message: '¿Está seguro de querer eliminar a este empleado?'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.apiService.deleteCategory(element._id).subscribe(\n            (response: ApiResponse<CategoryModel>) => {\n              this.messageService.shortMessage(response.message);\n              this.getCategories();\n            },\n            (error: ApiErrorModel) => {\n              this.messageService.shortMessage(error.error.message);\n            }\n          )\n        }\n      }\n    );\n  }\n\n  getItemToEdit(element: CategoryModel) {\n    this.categorySelected = element;\n    this.categoryForm.patchValue(this.categorySelected);\n  }\n\n  cutString(value: string, length?: number) {\n    return value.substring(0, length | 5);\n  }\n\n\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"15px\" class=\"animated fadeIn\">\n    <mat-card class=\"mat-elevation-z4\">\n        <mat-card-title>\n            Gestion de categorías\n        </mat-card-title>\n        <br>\n\n        <mat-card-content>\n            <form [formGroup]=\"categoryForm\" (ngSubmit)=\"saveCategory()\">\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && categoryForm.get('name')?.invalid\">\n                        <mat-label>Nombre</mat-label>\n                        <input matInput formControlName=\"name\" required>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && categoryForm.get('description')?.invalid\">\n                        <mat-label>Descripción</mat-label>\n                        <textarea matInput formControlName=\"description\" rows=\"3\" required></textarea>\n                    </mat-form-field>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"end end\">\n                    <button [disabled]=\"isRunning\" mat-raised-button color=\"primary\" type=\"submit\">\n                        Aceptar\n                    </button>\n\n                    <button [disabled]=\"isRunning\" mat-raised-button type=\"button\" (click)=\"buildForm()\">\n                        Limpiar\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n\n    </mat-card>\n\n    <mat-card class=\"mat-elevation-z4\" fxLayout=\"column\">\n        <table mat-table [dataSource]=\"dataSource\">\n\n            <!-- Id Column -->\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef> Id </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"link-primary\">\n                        {{cutString(element._id)}}\n                    </span>\n                </td>\n            </ng-container>\n\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef> Nombre </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.name }} </td>\n            </ng-container>\n\n            <!-- Description Column -->\n            <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef> Descripción </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n            </ng-container>\n\n            <!-- actions Column -->\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef> Acciones </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"warn\" type=\"button\" matTooltip=\"Eliminar\"\n                            (click)=\"goToDelete(element)\">\n                            <mat-icon>delete_for_ever</mat-icon>\n                        </button>\n\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"primary\" type=\"button\" matTooltip=\"Editar\"\n                            (click)=\"getItemToEdit(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\n            </tr>\n        </table>\n\n        <div fxLayoutAlign=\"center end\" *ngIf=\"length == 0\">\n            <h4 class=\"no-data\">No hay registros para mostrar.</h4>\n        </div>\n\n        <mat-paginator *ngIf=\"length != 0\" [length]=\"length\" [pageSizeOptions]=\"pageSizeOptions\"\n            (page)=\"getCategories($event)\">\n        </mat-paginator>\n    </mat-card>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DialogConfirmComponent } from 'src/app/components/dialog-confirm/dialog-confirm.component';\nimport { consts } from 'src/app/const';\nimport { ApiErrorModel } from 'src/app/models/ApiErrorModel';\nimport { ApiResponse } from 'src/app/models/ApiResponse';\nimport { IdentificationTypeModel } from 'src/app/models/IdentificationTypeModel';\nimport { ApiService } from 'src/app/services/api.service';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { MessageService } from 'src/app/services/message.service';\n\n@Component({\n  selector: 'turnapp-settings-identification-types-view',\n  templateUrl: './settings-identification-types-view.component.html',\n  styleUrls: ['./settings-identification-types-view.component.scss']\n})\nexport class SettingsIdentificationTypesViewComponent implements OnInit {\n\n  public identificationForm: FormGroup;\n  public identificationSelected: IdentificationTypeModel;\n  public pageIndex: number = consts.pageIndex;\n  public pageSize: number = consts.pageSize;\n  public pageSizeOptions: Array<number> = consts.pageSizeOptions;\n  public displayedColumns: string[] = ['id', 'value', 'description', 'actions'];\n  public dataSource = new MatTableDataSource<any>([]);\n  public length: number = 0;\n  public selection = new SelectionModel<any>(true, []);\n  public hasErrors: boolean;\n  public isRunning: boolean;\n\n  constructor(\n    private messageService: MessageService,\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private globalService: GlobalService\n  ) { }\n\n  ngOnInit(): void {\n    this.globalService.getRunning().subscribe(value => this.isRunning = value);\n    this.buildForm();\n    this.getIdentificationTypes();\n  }\n\n  buildForm() {\n    this.identificationForm = null;\n    this.identificationForm = new FormGroup({\n      value: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n    });\n    this.identificationSelected = null;\n    this.hasErrors = false;\n    this.pageIndex = consts.pageIndex;\n    this.pageSize = consts.pageSize;\n    this.pageSizeOptions = consts.pageSizeOptions;\n    this.length = 0;\n  }\n\n  saveIdentification() {\n    if (this.identificationForm.invalid) {\n      this.messageService.shortMessage('Los campos marcados en rojo deben ser verificados');\n      this.hasErrors = true;\n      return;\n    }\n\n    if (this.identificationSelected) {\n      this.apiService.editIdentification(this.identificationForm.value, this.identificationSelected._id).subscribe(\n        (response: ApiResponse<any>) => {\n          this.messageService.shortMessage(response.message);\n          this.buildForm();\n          this.getIdentificationTypes();\n        },\n        (error: any) => {\n          this.messageService.shortMessage(error.error.message);\n        }\n      )\n      return;\n    }\n\n    this.apiService.saveIdentification(this.identificationForm.value).subscribe(\n      (response: ApiResponse<any>) => {\n        this.messageService.shortMessage(response.message);\n        this.buildForm();\n        this.getIdentificationTypes();\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  getIdentificationTypes(event?: any) {\n    const pageIndex = event ? event.pageIndex * this.pageSize : this.pageIndex;\n    const pageSize = event ? event.pageSize : this.pageSize;\n    this.apiService.getIdentificationTypes(pageIndex, pageSize).subscribe(\n      (response: ApiResponse<any>) => {\n        this.dataSource = new MatTableDataSource<any>(response.items);\n        this.length = response.totalItems;\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  goToDelete(element: IdentificationTypeModel) {\n    const dialogRef = this.dialog.open(DialogConfirmComponent, {\n      width: '250px',\n      data: {\n        title: 'Confirmación',\n        message: '¿Está seguro de querer eliminar este tipo de identificación?'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.apiService.deleteIdentification(element._id).subscribe(\n            (response: ApiResponse<IdentificationTypeModel>) => {\n              this.messageService.shortMessage(response.message);\n              this.getIdentificationTypes();\n            },\n            (error: ApiErrorModel) => {\n              this.messageService.shortMessage(error.error.message);\n            }\n          )\n        }\n      }\n    );\n  }\n\n  getItemToEdit(element: IdentificationTypeModel) {\n    this.identificationSelected = element;\n    this.identificationForm.patchValue(this.identificationSelected);\n  }\n\n\n  cutString(value: string, length?: number) {\n    return value.substring(0, length | 5);\n  }\n\n\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"15px\" class=\"animated fadeIn\">\n    <mat-card class=\"mat-elevation-z4\">\n        <mat-card-title>\n            Gestion de tipos de identificación\n        </mat-card-title>\n        <br>\n\n        <mat-card-content>\n            <form [formGroup]=\"identificationForm\" (ngSubmit)=\"saveIdentification()\">\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && identificationForm.get('value')?.invalid\">\n                        <mat-label>Valor</mat-label>\n                        <input matInput formControlName=\"value\" required>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && identificationForm.get('description')?.invalid\">\n                        <mat-label>Descripción</mat-label>\n                        <textarea matInput formControlName=\"description\" rows=\"3\" required></textarea>\n                    </mat-form-field>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"end end\">\n                    <button [disabled]=\"isRunning\" mat-raised-button color=\"primary\" type=\"submit\">\n                        Aceptar\n                    </button>\n\n                    <button [disabled]=\"isRunning\" mat-raised-button type=\"button\" (click)=\"buildForm()\">\n                        Limpiar\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n\n    </mat-card>\n\n    <mat-card class=\"mat-elevation-z4\" fxLayout=\"column\">\n        <table mat-table [dataSource]=\"dataSource\">\n\n            <!-- Id Column -->\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef> Id </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"link-primary\">\n                        {{cutString(element._id)}}\n                    </span>\n                </td>\n            </ng-container>\n\n            <!-- value Column -->\n            <ng-container matColumnDef=\"value\">\n                <th mat-header-cell *matHeaderCellDef> Valor </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.value }} </td>\n            </ng-container>\n\n            <!-- Description Column -->\n            <ng-container matColumnDef=\"description\">\n                <th mat-header-cell *matHeaderCellDef> Descripción </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n            </ng-container>\n\n            <!-- actions Column -->\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef> Acciones </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"warn\" type=\"button\" matTooltip=\"Eliminar\"\n                            (click)=\"goToDelete(element)\">\n                            <mat-icon>delete_for_ever</mat-icon>\n                        </button>\n\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"primary\" type=\"button\" matTooltip=\"Editar\"\n                            (click)=\"getItemToEdit(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\n            </tr>\n        </table>\n\n        <div fxLayoutAlign=\"center end\" *ngIf=\"length == 0\">\n            <h4 class=\"no-data\">No hay registros para mostrar.</h4>\n        </div>\n\n        <mat-paginator *ngIf=\"length != 0\" [length]=\"length\"\n            [pageSizeOptions]=\"pageSizeOptions\" (page)=\"getIdentificationTypes($event)\">\n        </mat-paginator>\n    </mat-card>\n</div>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DialogConfirmComponent } from 'src/app/components/dialog-confirm/dialog-confirm.component';\nimport { ApiErrorModel } from 'src/app/models/ApiErrorModel';\nimport { ApiResponse } from 'src/app/models/ApiResponse';\nimport { ApiService } from 'src/app/services/api.service';\nimport { MessageService } from 'src/app/services/message.service';\nimport { TurnModel } from 'src/app/models/TurnModel';\nimport { consts } from 'src/app/const';\nimport { GlobalService } from 'src/app/services/global.service';\n\n@Component({\n  selector: 'turnapp-settings-shedules-view',\n  templateUrl: './settings-shedules-view.component.html',\n  styleUrls: ['./settings-shedules-view.component.scss']\n})\nexport class SettingsShedulesViewComponent implements OnInit {\n\n  public turnForm: FormGroup;\n  public turnSelected: TurnModel;\n  public pageIndex: number = consts.pageIndex;\n  public pageSize: number = consts.pageSize;\n  public pageSizeOptions: Array<number> = consts.pageSizeOptions;\n  public displayedColumns: string[] = ['id', 'name', 'timeStart', 'timeEnd', 'actions'];\n  public dataSource = new MatTableDataSource<any>([]);\n  public length: number = 0;\n  public selection = new SelectionModel<any>(true, []);\n  public hasErrors: boolean;\n  public isRunning: boolean;\n\n\n  constructor(\n    private messageService: MessageService,\n    private apiService: ApiService,\n    private dialog: MatDialog,\n    private globalService: GlobalService\n  ) { }\n\n  ngOnInit(): void {\n    this.globalService.getRunning().subscribe(value => this.isRunning = value);\n    this.buildForm();\n    this.getTurns();\n  }\n\n  buildForm() {\n    this.turnForm = null;\n    this.turnForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      timeStart: new FormControl('', [Validators.required]),\n      timeEnd: new FormControl('', [Validators.required]),\n    });\n    this.turnSelected = null;\n    this.hasErrors = false;\n    this.pageIndex = consts.pageIndex;\n    this.pageSize = consts.pageSize;\n    this.pageSizeOptions = consts.pageSizeOptions;\n    this.length = 0;\n  }\n\n  saveTurn() {\n    if (this.turnForm.invalid) {\n      this.messageService.shortMessage('Los campos marcados en rojo deben ser verificados');\n      this.hasErrors = true;\n      return;\n    }\n\n    if (this.turnSelected) {\n      this.apiService.editTurn(this.turnForm.value, this.turnSelected._id).subscribe(\n        (response: ApiResponse<any>) => {\n          this.messageService.shortMessage(response.message);\n          this.buildForm();\n          this.getTurns();\n        },\n        (error: any) => {\n          this.messageService.shortMessage(error.error.message);\n        }\n      )\n      return;\n    }\n\n    this.apiService.saveTurn(this.turnForm.value).subscribe(\n      (response: ApiResponse<any>) => {\n        this.messageService.shortMessage(response.message);\n        this.buildForm();\n        this.getTurns();\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  getTurns(event?: any) {\n    const pageIndex = event ? event.pageIndex * this.pageSize : this.pageIndex;\n    const pageSize = event ? event.pageSize : this.pageSize;\n    this.apiService.getTurns(pageIndex, pageSize).subscribe(\n      (response: ApiResponse<any>) => {\n        this.dataSource = new MatTableDataSource<any>(response.items);\n        this.length = response.totalItems;\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  goToDelete(element: TurnModel) {\n    const dialogRef = this.dialog.open(DialogConfirmComponent, {\n      width: '250px',\n      data: {\n        title: 'Confirmación',\n        message: '¿Está seguro de querer eliminar a este empleado?'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.apiService.deleteTurn(element._id).subscribe(\n            (response: ApiResponse<TurnModel>) => {\n              this.messageService.shortMessage(response.message);\n              this.getTurns();\n            },\n            (error: ApiErrorModel) => {\n              this.messageService.shortMessage(error.error.message);\n            }\n          )\n        }\n      }\n    );\n  }\n\n  getItemToEdit(element: TurnModel) {\n    this.turnSelected = element;\n    this.turnForm.patchValue(this.turnSelected);\n  }\n\n  cutString(value: string, length?: number) {\n    return value.substring(0, length | 5);\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"15px\" class=\"animated fadeIn\">\n    <mat-card class=\"mat-elevation-z4\">\n        <mat-card-title>\n            Gestion de horarios\n        </mat-card-title>\n        <br>\n\n        <mat-card-content>\n            <form [formGroup]=\"turnForm\" (ngSubmit)=\"saveTurn()\">\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && turnForm.get('name')?.invalid\">\n                        <mat-label>Nombre</mat-label>\n                        <input matInput formControlName=\"name\" required>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && turnForm.get('timeStart')?.invalid\">\n                        <mat-label>Hora inicial</mat-label>\n                        <input matInput [ngxTimepicker]=\"pickerStart\" formControlName=\"timeStart\" required>\n                        <ngx-material-timepicker #pickerStart></ngx-material-timepicker>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && turnForm.get('timeEnd')?.invalid\">\n                        <mat-label>Hora final</mat-label>\n                        <input matInput [ngxTimepicker]=\"pickerEnd\" formControlName=\"timeEnd\" required>\n                        <ngx-material-timepicker #pickerEnd></ngx-material-timepicker>\n                    </mat-form-field>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"end end\">\n                    <button [disabled]=\"isRunning\" mat-raised-button color=\"primary\" type=\"submit\">\n                        Aceptar\n                    </button>\n\n                    <button [disabled]=\"isRunning\" mat-raised-button type=\"button\" (click)=\"buildForm()\">\n                        Limpiar\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n\n    </mat-card>\n\n    <mat-card class=\"mat-elevation-z4\" fxLayout=\"column\">\n        <table mat-table [dataSource]=\"dataSource\">\n\n            <!-- Id Column -->\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef> Id </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"link-primary\">\n                        {{cutString(element._id)}}\n                    </span>\n                </td>\n            </ng-container>\n\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef> Nombre </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.name }} </td>\n            </ng-container>\n\n            <!-- TimeStart Column -->\n            <ng-container matColumnDef=\"timeStart\">\n                <th mat-header-cell *matHeaderCellDef> Hora inicial </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.timeStart}} </td>\n            </ng-container>\n\n            <!-- TimeEnd Column -->\n            <ng-container matColumnDef=\"timeEnd\">\n                <th mat-header-cell *matHeaderCellDef> Hora final </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.timeEnd}} </td>\n            </ng-container>\n\n            <!-- actions Column -->\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef> Acciones </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"warn\" type=\"button\" matTooltip=\"Eliminar\"\n                            (click)=\"goToDelete(element)\">\n                            <mat-icon>delete_for_ever</mat-icon>\n                        </button>\n\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"primary\" type=\"button\" matTooltip=\"Editar\"\n                            (click)=\"getItemToEdit(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\">\n            </tr>\n        </table>\n\n        <div fxLayoutAlign=\"center end\" *ngIf=\"length == 0\">\n            <h4 class=\"no-data\">No hay registros para mostrar.</h4>\n        </div>\n\n        <mat-paginator *ngIf=\"length != 0\" [length]=\"length\" [pageSizeOptions]=\"pageSizeOptions\"\n            (page)=\"getTurns($event)\">\n        </mat-paginator>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LinkNavigation } from 'src/app/models/LinkNavigation';\n\n@Component({\n  selector: 'turnapp-settings-view',\n  templateUrl: './settings-view.component.html',\n  styleUrls: ['./settings-view.component.scss']\n})\nexport class SettingsViewComponent implements OnInit {\n\n  public navLinks: Array<LinkNavigation>;\n  public activeLinkIndex = -1;\n\n  constructor(private router: Router) {\n    this.navLinks = [\n      {\n        label: 'Horarios',\n        link: './shedules',\n        index: 0,\n        icon: 'av_timer'\n      },\n      {\n        label: 'Categorías',\n        link: './categories',\n        index: 1,\n        icon: 'category'\n      },\n      {\n        label: 'Tipos de identificación',\n        link: './identification-types',\n        index: 2,\n        icon: 'account_box'\n      },\n    ];\n  }\n\n  ngOnInit(): void {\n    this.router.events.subscribe(\n      (res) => {\n        this.activeLinkIndex = this.navLinks.indexOf(this.navLinks.find(tab => tab.link === '.' + this.router.url));\n      }\n    );\n  }\n\n}\n","<nav mat-tab-nav-bar class=\"animated fadeIn fast\">\n    <a mat-tab-link *ngFor=\"let link of navLinks\" [routerLink]=\"link.link\" routerLinkActive #rla=\"routerLinkActive\"\n        [active]=\"rla.isActive\">\n        <mat-icon>{{link.icon}}</mat-icon>\n        {{link.label}}\n    </a>\n</nav>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { forkJoin } from 'rxjs';\nimport { consts } from 'src/app/const';\nimport { ApiErrorModel } from 'src/app/models/ApiErrorModel';\nimport { ApiResponse } from 'src/app/models/ApiResponse';\nimport { CategoryModel } from 'src/app/models/CategoryModel';\nimport { EmployeeModel } from 'src/app/models/EmployeeModel';\nimport { ApiService } from 'src/app/services/api.service';\nimport { GlobalService } from 'src/app/services/global.service';\nimport { MessageService } from 'src/app/services/message.service';\nimport { SheduleModel } from 'src/app/models/SheduleModel';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogConfirmComponent } from 'src/app/components/dialog-confirm/dialog-confirm.component';\n\n@Component({\n  selector: 'app-shedule-view',\n  templateUrl: './shedule-view.component.html',\n  styleUrls: ['./shedule-view.component.scss']\n})\nexport class SheduleViewComponent implements OnInit {\n\n  public employees: Array<EmployeeModel>;\n  public registerSheduleForm: FormGroup;\n  public sheduleSelected: SheduleModel;\n  public now: Date = new Date;\n  public turns: Array<any> = [];\n  public categoriesList: Array<CategoryModel> = [];\n  public hasErrors: boolean;\n  public pageIndex: number = consts.pageIndex;\n  public pageSize: number = consts.pageSize;\n  public pageSizeOptions: Array<number> = consts.pageSizeOptions;\n  public displayedColumns: string[] = ['employee', 'date', 'type', 'hours', 'actions'];\n  public dataSource = new MatTableDataSource<EmployeeModel>([]);\n  public length: number = 0;\n  public isRunning: boolean;\n\n  constructor(\n    private messageService: MessageService,\n    private apiService: ApiService,\n    private globalService: GlobalService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.globalService.getRunning().subscribe(value => this.isRunning = value);\n    this.buildForm();\n    this.getData();\n    this.getShedules();\n  }\n\n  buildForm() {\n    this.registerSheduleForm = new FormGroup({\n      employeeCode: new FormControl('', [Validators.required]),\n      firstName: new FormControl('', [Validators.required]),\n      firstLastname: new FormControl('', [Validators.required]),\n      category: new FormControl('', [Validators.required]),\n      dateStart: new FormControl('', [Validators.required]),\n      dateEnd: new FormControl('', [Validators.required]),\n      type: new FormControl('', [Validators.required]),\n      hours: new FormControl('', [Validators.required]),\n    })\n    this.hasErrors = false;\n    this.pageIndex = consts.pageIndex;\n    this.pageSize = consts.pageSize;\n    this.pageSizeOptions = consts.pageSizeOptions;\n    this.length = 0;\n  }\n\n  saveShedule() {\n    if (this.registerSheduleForm.invalid) {\n      this.messageService.shortMessage('Los campos marcados en rojo deben ser verificados');\n      this.hasErrors = true;\n      return;\n    }\n\n    if (this.sheduleSelected) {\n      this.apiService.editShedule(this.registerSheduleForm.value, this.sheduleSelected._id).subscribe(\n        (response: ApiResponse<any>) => {\n          this.messageService.shortMessage(response.message);\n          this.buildForm();\n          this.getShedules();\n        },\n        (error: any) => {\n          this.messageService.shortMessage(error.error.message);\n        }\n      )\n      return;\n    }\n\n    this.apiService.saveShedule(this.registerSheduleForm.value).subscribe(\n      (response: ApiResponse<any>) => {\n        this.messageService.shortMessage(response.message);\n        this.buildForm();\n        this.getShedules();\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n  getEmployeeSelected(event: MatSelectChange) {\n    this.apiService.getOneEmployee(event.value).subscribe(\n      (response: ApiResponse<EmployeeModel>) => {\n        this.registerSheduleForm.get('firstName').setValue(response.data[0].firstName);\n        this.registerSheduleForm.get('firstLastname').setValue(response.data[0].firstLastname);\n        this.registerSheduleForm.get('category').setValue(response.data[0].category);\n      }\n    )\n  }\n\n  setHours(event: MatSelectChange) {\n    const hours = this.turns.find(item => item._id == event.value);\n    this.registerSheduleForm.get('hours').setValue(`${hours.timeStart} - ${hours.timeEnd}`);\n  }\n\n  getData() {\n    this.registerSheduleForm.disable();\n    forkJoin([\n      this.apiService.getTurns(0, 1000),\n      this.apiService.getCategories(0, 1000),\n      this.apiService.getEmployees(0, 1000)\n    ]).subscribe(\n      (response: any) => {\n        this.registerSheduleForm.enable();\n        this.registerSheduleForm.get('firstName').disable();\n        this.registerSheduleForm.get('firstLastname').disable();\n        this.registerSheduleForm.get('category').disable();\n        this.registerSheduleForm.get('hours').disable();\n        this.turns = response[0].items;\n        this.categoriesList = response[1].items;\n        this.employees = response[2].items;\n      }\n    )\n  }\n\n  goToDelete(element: SheduleModel) {\n    const dialogRef = this.dialog.open(DialogConfirmComponent, {\n      width: '250px',\n      data: {\n        title: 'Confirmación',\n        message: '¿Está seguro de querer eliminar a este empleado?'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.apiService.deleteShedule(element._id).subscribe(\n            (response: ApiResponse<CategoryModel>) => {\n              this.messageService.shortMessage(response.message);\n              this.getShedules();\n            },\n            (error: ApiErrorModel) => {\n              this.messageService.shortMessage(error.error.message);\n            }\n          )\n        }\n      }\n    );\n  }\n\n  getItemToEdit(element) {\n\n  }\n\n  getShedules(event?: any) {\n    const pageIndex = event ? event.pageIndex * this.pageSize : this.pageIndex;\n    const pageSize = event ? event.pageSize : this.pageSize;\n    this.apiService.getShedules(pageIndex, pageSize).subscribe(\n      (response: ApiResponse<any>) => {\n        this.dataSource = new MatTableDataSource<any>(response.items);\n        this.length = response.totalItems;\n      },\n      (error: any) => {\n        this.messageService.shortMessage(error.error.message);\n      }\n    )\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"15px\" class=\"container animated fadeIn\">\n    <mat-card class=\"mat-elevation-z4\">\n        <mat-card-title>\n            Gestion de turnos\n        </mat-card-title>\n        <br>\n\n        <mat-card-content>\n            <form [formGroup]=\"registerSheduleForm\" (ngSubmit)=\"saveShedule()\">\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n                    <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                        [class.mat-form-field-invalid]=\"hasErrors && registerSheduleForm.get('firstName')?.invalid\">\n                        <mat-label>Código empleado</mat-label>\n                        <mat-select formControlName=\"employeeCode\" required\n                            (selectionChange)=\"getEmployeeSelected($event)\">\n                            <mat-option [value]=\"item.code\" *ngFor=\"let item of employees\">{{item.code}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                        [class.mat-form-field-invalid]=\"hasErrors && registerSheduleForm.get('firstName')?.invalid\">\n                        <mat-label>Primer nombre</mat-label>\n                        <input matInput formControlName=\"firstName\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                        [class.mat-form-field-invalid]=\"hasErrors && registerSheduleForm.get('firstLastname')?.invalid\">\n                        <mat-label>Primer apellido</mat-label>\n                        <input matInput formControlName=\"firstLastname\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"25\"\n                        [class.mat-form-field-invalid]=\"hasErrors && registerSheduleForm.get('category')?.invalid\">\n                        <mat-label>Categoría</mat-label>\n                        <mat-select formControlName=\"category\" required>\n                            <mat-option *ngFor=\"let item of categoriesList\" [value]=\"item._id\">\n                                {{ item.name}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\">\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && registerSheduleForm.get('date')?.invalid\">\n                        <mat-label>Fecha de turno</mat-label>\n                        <mat-date-range-input [rangePicker]=\"picker\">\n                            <input matStartDate formControlName=\"dateStart\" [min]=\"now\" (click)=\"picker.open()\"\n                                required>\n                            <input matEndDate formControlName=\"dateEnd\" [min]=\"now\" (click)=\"picker.open()\" required>\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && registerSheduleForm.get('type')?.invalid\">\n                        <mat-label>Tipo turno</mat-label>\n                        <mat-select formControlName=\"type\" (selectionChange)=\"setHours($event)\" required>\n                            <mat-option [value]=\"item._id\" *ngFor=\"let item of turns\">{{ item.name }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"fill\" fxFlex=\"33\"\n                        [class.mat-form-field-invalid]=\"hasErrors && registerSheduleForm.get('hours')?.invalid\">\n                        <mat-label>Horario</mat-label>\n                        <input matInput formControlName=\"hours\" required>\n                    </mat-form-field>\n                </div>\n\n                <div fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"end end\">\n                    <button [disabled]=\"isRunning\" mat-raised-button color=\"primary\" type=\"submit\">\n                        Aceptar\n                    </button>\n\n                    <button [disabled]=\"isRunning\" mat-raised-button type=\"button\" (click)=\"buildForm()\">\n                        Limpiar\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"mat-elevation-z4\" fxLayout=\"column\">\n        <table mat-table [dataSource]=\"dataSource\">\n\n            <!-- Position Column -->\n            <ng-container matColumnDef=\"employee\">\n                <th mat-header-cell *matHeaderCellDef> Empleado </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <span class=\"link-primary\">\n                        {{element.employeeCode}}\n                    </span>\n                </td>\n            </ng-container>\n\n            <!-- Name Column -->\n            <ng-container matColumnDef=\"date\">\n                <th mat-header-cell *matHeaderCellDef> Fecha </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    {{element.dateStart | date: 'dd/MM/yyyy' }} -\n                    {{ element.dateEnd | date: 'dd/MM/yyyy' }}\n                </td>\n            </ng-container>\n\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"type\">\n                <th mat-header-cell *matHeaderCellDef> Turno </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.type.name}} </td>\n            </ng-container>\n\n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"hours\">\n                <th mat-header-cell *matHeaderCellDef> Horas </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.hours}} </td>\n            </ng-container>\n\n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef> Acciones </th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"warn\" type=\"button\" matTooltip=\"Eliminar\"\n                            (click)=\"goToDelete(element)\">\n                            <mat-icon>delete_for_ever</mat-icon>\n                        </button>\n\n                        <button [disabled]=\"isRunning\" mat-icon-button color=\"primary\" type=\"button\" matTooltip=\"Editar\"\n                            (click)=\"getItemToEdit(element)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n            </tr>\n        </table>\n\n        <div fxLayoutAlign=\"center end\" *ngIf=\"length == 0\">\n            <h4 class=\"no-data\">No hay registros para mostrar.</h4>\n        </div>\n\n        <mat-paginator *ngIf=\"length != 0\" [length]=\"length\" [pageSizeOptions]=\"pageSizeOptions\"\n            (page)=\"getShedules($event)\">\n        </mat-paginator>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'turnapp-without-permissions-view',\n  templateUrl: './without-permissions-view.component.html',\n  styleUrls: ['./without-permissions-view.component.scss']\n})\nexport class WithoutPermissionsViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>without-permissions-view works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API: 'http://localhost:3000'\r\n  //API: 'https://turnapp-api.herokuapp.com'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}